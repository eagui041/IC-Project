
 

Abstract

Homeowners often engage contractors to apply driveway sealers to enhance and protect their driveways. A successful and long-lasting sealer application is contingent on strict adherence to installation specifications, particularly weather conditions. Respecting these conditions is crucial, not only for product performance but also to uphold any warranties. 
The project introduces a Python-based tool that leverages weather data from Environment Canada. The primary objective is to produce a visual representation that delineates optimal installation periods, given the weather constraints specified by the driveway sealer product. The visual will be integrated into a product evaluation report. This tool aims to facilitate contractors in efficiently planning their installation schedules, ensuring both compliance with product guidelines and maximizing their work opportunities. Effective planning can help manage the contractor’s business while ensuring clients receive properly installed products.
 
Contents

Abstract	1
Objectives, Deliverables and Plan	3
Application Relevance	3
Software Modules	4
Tools, Software, References, Licensing	5
Programming/Testing Environment and Workflow	6
Data Source & Quality	7
Software Risk Analysis	7
Appendix A – Project Schedule	8
Appendix B – References	9

 
Objectives, Deliverables and Plan
The project will deliver a python program capable of visualizing the available pairs of days within a specified year when a particular product can be installed. This visualization will then be used to create a report that provides the visual and insights of install opportunities.
Deliverables:
1.	Python program to generate visual.
2.	Report presenting visualization and analysis.
Success Criteria: The project will be deemed a success if the code is able to generate an accurate visualization of the available installation opportunities and the visualization can be used to plan future driveway sealer installations.
The project phases are as follows:
 
Timeline: September 6th 2023 – October 1st 2023

A detailed project schedule can be found in Appendix A – Project Schedule.
Application Relevance
This application is aimed at providing contractors insights into the installation opportunities of driveway sealers. The visuals generated by the program can be utilized in a product evaluation report. The insights gained by this process can help contractors for future installation forecasting. Given that data analysis is not a common contractor skillset, this program can expedite the product evaluation process.
Software Modules
Preliminary designs of the program include the creation of three programming modules, and a final manual report compilation. 
 
Item	Rational	Est. Duration	Dependency
Module 1 – Data Collection	Data loading will be done using an import csv function. This module will be broken into sub modules. A) Manufacturer requirement input B) Weather data. Existing libraries and functions exist for loading these types of data. 	5 hrs	Developer data collection (csv).
Module 2- Data Processing	The weather data will be processed (transformed) to load relevant data only. This is not expected to take long given there are few (four) data points that are needed.	3-5 hrs	Module 1
Module 3 - Visualization	Finally, a visualization module will be used to transform the dataset into a final graphic for report purposes.	3-5 hrs	Module 2
Compilation	Bluebeam Revu or MSWord will be used to import the visualization into a product evaluation report	2 hrs	Module 3
	Total	14-17 hrs	
 
Tools, Software, References, Licensing

Development of the program will take place locally on a laptop running Windows 10. OneDrive will be the cloud storage tool which will be used for remote accessing.
Software List:
Name	Purpose	Justification
Google Chrome	-	Research (code, product req., data)
-	Data collection
-	PDF Viewer	-	Readily available
-	Secure/Trusted Browser
OpenAi - ChatGPT Plus	-	Text improvements
-	Code generation
-	Research (questions)	-	Developer familiarity
-	Rapid generative transformer
-	Industry leader
Visual Studio Code	-	IDE
-	Python code authoring tool	-	Trusted IDE
-	Capable of running code
MS Word	-	Plan/report writing	-	Readily available
-	Developer familiarity
Bluebeam Revu	-	PDF editor/viewer	-	Dev. familiarity
MS Project	-	Schedule Editor	-	Dev. familiarity
GitHub	-	Code resource	-	Robust source of code snippets
OneDrive	-	Remote file access	-	Readily available
-	Reputable/stable platform
Windows 10	-	Development OS environment	-	Readily available
-	Pre-installed

The project may use open-source code found online. References to any used code, as well as their respective licensing terms will be added to the Detailed Design as needed.
Licensing information for data sources below.
 
Programming/Testing Environment and Workflow

Environment: The project is being developed on a laptop running Windows 10. The IDE for code development is Visual Studio Code. These high-level tools are suitable for the development of the program given that they are accessible to the developer, can deliver the required program, and they have extensive available resources. Visual Studio will also provide insights of errors which can improve testing efficiency.
Language: The program is being written in Python. This is a requirement of the project. Python offers access to powerful libraries, can deliver the product, and is well supported online.
Development Flow: 
1.	The program will be created in Visual Studio Code.
2.	Per Module - Developer will cycle between VS Code, Chrome, and ChatGPT to develop the code. GitHub may also be used at this stage.
3.	Reference generation will take place as new sources are integrated in the project.
4.	Testing will take place within VS Code and reviewed with ChatGPT as needed.
5.	Data Visualization will take place within VS Code and transferred to MSWord or Bluebeam Revu.
6.	Final report to be submitted.
Suitability: The development flow outlined above is suitable to develop the program given the low overall project complexity. It is expected that code modules will be small enough to use ChatGPT for error handling. Given that ChatGPT can also generate code, switching between the IDE and ChatGPT is expected to be sufficient. The IDE is inherently capable of showcasing errors as they arise. Transfer of the visualization to MSWord or Bluebeam Revu is being done to make use of existing developer skillsets.
 
Data Source & Quality

The project will make use of three data sources: Environment Canada, HomeDepot.ca, Rustoleum.ca.
Environment Canada is a reputable source for weather data. It is managed by the Federal Government of Canada, a reputable and respected institution. It is free to use, which reduces project costs. They also contain the necessary data points; namely precipitation, min/max temperatures, and relative humidity values. This project qualifies for use under the canada.ca terms of use.
The Home Depot website hosts a database that contains driveway sealing products. This list is being used to find a locally available driveway sealing product. This project qualifies for use under the homedepot.ca terms of use.
Rustoleum.ca was used to acquire the driveway sealer installation restrictions. This is the best source for this information since it is coming directly from the manufacturer of the product that is being evaluated. This project qualifies for use under the rustoleum.ca terms of use.
Software Risk Analysis

Preliminary works have verified that the data sources being used can deliver the necessary information. Risk level zero.
The developer has beginner level experience using the IDE. General risks associated with the use of an unfamiliar software and programming language are being abated by starting the project as early as posssible.
At this stage risks for re-used software cannot be validated. However, existing developer knowledge estimates the risk of not finding adequate code to deliver the product, to be low. Data loading and transforming are common practices. Sourcing simple code to execute key functions is not expected to be difficult. As a backup plan, code generation using ChatGPT Plus can also be used to expedite the writing process.

 
Appendix A – Project Schedule

Task Name	Duration	Start	Finish
Initialize	2 days	Wed 23-09-06	Thu 23-09-07
   Define Scope	1 hr	Wed 23-09-06	Wed 23-09-06
Analysis/Software Requirements	1 day	Sun 23-09-10	Sun 23-09-10
   Conduct needs analysis	1 hr	Mon 23-09-11	Mon 23-09-11
   Draft preliminary requirements	1 hr	Mon 23-09-11	Mon 23-09-11
   Build software list	1 hr	Mon 23-09-11	Mon 23-09-11
   Develop delivery timeline	1 hr	Mon 23-09-11	Mon 23-09-11
Design	2 days	Fri 23-09-15	Sat 23-09-16
   Develop Block Diagram	1 hr	Fri 23-09-15	Fri 23-09-15
Development	4 days	Mon 23-09-18	Thu 23-09-21
   Review plan	1 hr	Mon 23-09-18	Mon 23-09-18
   Identify modules	1 hr	Mon 23-09-18	Mon 23-09-18
   Module 1 Data Loading	5 hrs	Mon 23-09-18	Mon 23-09-18
   Module 2 Data Processing	5 hrs	Mon 23-09-18	Tue 23-09-19
   Module 3 Visualizer	5 hrs	Tue 23-09-19	Wed 23-09-20
Testing	1 day	Fri 23-09-22	Fri 23-09-22
   Error/User testing	1 day	Fri 23-09-22	Fri 23-09-22
Reporting	2 days	Sat 23-09-23	Mon 23-09-25
   Compile Report	4 hrs	Mon 23-09-25	Mon 23-09-25
Delivery	1 day	Wed 23-09-27	Wed 23-09-27
   Submit Deliverable	1 hr	Wed 23-09-27	Wed 23-09-27
Post Implementation Review	1 day	Sat 23-09-30	Sat 23-09-30
   Document lessons learned	1 hr	Sat 23-09-30	Sat 23-09-30

 
Appendix B – References

1.	https://www.canada.ca/en/transparency/terms.html
2.	https://www.homedepot.ca/en/home/customer-support/terms-of-use.html
3.	https://www.rustoleum.ca/pages/legal/terms-and-conditions

